name: AKS Deployment

on:
  repository_dispatch:
    types: aks-build-api-trigger


env:
  RESOURCE_GROUP: ${{ github.event.client_payload.aks_resource_group }}
  CLUSTER_NAME: ${{ github.event.client_payload.cluster_name }}

jobs:
  deploy-aks-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Echo the values
        run: |
          echo "cluster_name is: ${{ github.event.client_payload.client_payload }}"
          echo "azure_credentials is: ${{ github.event.client_payload.azure_credentials }}"


      - name: Payload Extracting
        run: |
          export PYTHONPATH=$PYTHONPATH:.
          pip3 install PyYAML
          python3 deployment_utils/json_converter.py --incoming_string "${{ github.event.client_payload.payload }}" --provider azure

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ github.event.client_payload.azure_credentials }}


      - name: Set Azure Subscription
        run: az account set --subscription ${{ env.AZ_SUBSCRIPTION_ID }}

      - name: Create AKS Cluster
        run: az aks create --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --location ${{ env.AZ_LOCATION_NAME }}  --node-count ${{ env.NUM_NODES }} --generate-ssh-keys --node-vm-size ${{ env.AZ_MACHINE_TYPE }}
#        run: az aks create --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --location ${{ env.AZ_LOCATION_NAME }}  --node-count ${{ env.NUM_NODES }} --generate-ssh-keys --node-vm-size Standard_DS2_v2

      - name: Post Deployment Tasks
        env:
          MONGO_URL: ${{ env.MONGO_URL }}
          MONGO_USER: ${{ env.MONGO_USER }}
          MONGO_PASSWORD: ${{ env.MONGO_PASSWORD }}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          KUBECONFIG: /home/runner/.kube/config
          AZ_LOCATION: ${{ env.AZ_LOCATION }}
          AZ_RESOURCE_GROUP: ${{ env.AZ_RESOURCE_GROUP }}
          EXPIRATION_TIME: ${{ env.EXPIRATION_TIME }}


        run: |
          export PYTHONPATH=$PYTHONPATH:.
          az aks get-credentials --name ${{ env.CLUSTER_NAME }} --overwrite-existing --resource-group ${{ env.AZ_RESOURCE_GROUP }}
          pip3 install -r web/requirements.txt
          python3 deployment_utils/kubernetes_post_deployment.py --cluster_type aks
