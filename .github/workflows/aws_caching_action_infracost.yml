name: AWS Caching
on:
  repository_dispatch:
    types: aws-caching-action-infracost-trigger

jobs:
  aws-caching-trigger:
    runs-on: ubuntu-20.04
    steps:
      - uses: 'actions/checkout@v3'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ github.event.client_payload.aws_access_key_id }}
          aws-secret-access-key: ${{ github.event.client_payload.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9


      - name: Checkout infracost pricing repo
        uses: actions/checkout@v3
        with:
          repository: infracost/cloud-pricing-api
          path: cloud-pricing-api

      - name: Echo the values
        run: |
          echo "project_name is: ${{ github.event.client_payload.project_name }}"
          echo "infracost_token is: ${{ github.event.client_payload.infracost_token }}"
          
      - name: Installing Infracost
        run: |
          docker -v
          docker compose version
          pwd
          ls
          cd cloud-pricing-api
          ls
          echo "SELF_HOSTED_INFRACOST_API_KEY=${{ github.event.client_payload.infracost_token }}"
          INFRACOST_API_KEY=${{ github.event.client_payload.infracost_token }}
          SELF_HOSTED_INFRACOST_API_KEY=$SELF_HOSTED_INFRACOST_API_KEY
          ls
          pwd
          docker-compose run init_job
          docker-compose up api -d

      - name: Caching Tasks
        env:
          MONGO_URL: ${{ github.event.client_payload.mongo_url }}
          MONGO_USER: ${{ github.event.client_payload.mongo_user }}
          MONGO_PASSWORD: ${{ github.event.client_payload.mongo_password }}
          PROJECT_NAME: ${{ github.event.client_payload.project_name }}
          INFRACOST_TOKEN: ${{ github.event.client_payload.infracost_token }}"
          INFRACOST_URL: http://localhost:4000
          GITHUB_ACTIONS_ENV: Yes

        run: |
          export PYTHONPATH=$PYTHONPATH:.
#          pip3 install -r web/requirements.txt
#          python3 web/scripts/aws_caching_script.py --aws-access-key-id ${{ github.event.client_payload.aws_access_key_id }} --aws-secret-access-key ${{ github.event.client_payload.aws_secret_access_key }}
